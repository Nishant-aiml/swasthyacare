functionsDirectory = "netlify/functions"
functionsDirectoryOrigin = "config-v1"
headersOrigin = "config"
redirectsOrigin = "config"
plugins = []

[build]
publish = "dist"
publishOrigin = "config"
commandOrigin = "config"
command = "npm run build"
functions = "netlify/functions"

[build.environment]
NODE_VERSION = "18.x"
NPM_VERSION = "9.x"

[build.processing]

[build.processing.css]

[build.processing.html]

[build.processing.images]

[build.processing.js]

[build.services]

[dev]
framework = "#custom"
targetPort = 5173.0
command = "npm run dev"
port = 8888.0
publish = "dist"
autoLaunch = true

[functions]

[functions."*"]
external_node_modules = ["@huggingface/inference"]
node_bundler = "esbuild"

[[headers]]
for = "/*"

[headers.values]
X-Frame-Options = "DENY"
X-XSS-Protection = "1; mode=block"
X-Content-Type-Options = "nosniff"
Referrer-Policy = "strict-origin-when-cross-origin"
Permissions-Policy = "geolocation=(self), camera=(), microphone=()"
Strict-Transport-Security = "max-age=31536000; includeSubDomains"
Content-Security-Policy = "default-src 'self';\n  script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.googleapis.com https://*.gstatic.com;\n  style-src 'self' 'unsafe-inline' https://*.googleapis.com;\n  img-src 'self' data: https://*.googleapis.com https://*.gstatic.com https://maps.google.com;\n  font-src 'self' https://*.gstatic.com;\n  connect-src 'self' https://*.googleapis.com https://generativelanguage.googleapis.com wss://api.swasthyacare.com https://api.mapbox.com https://api.yourdomain.com;\n  frame-src 'self';\n  object-src 'none'"
Access-Control-Allow-Origin = "*"
Access-Control-Allow-Methods = "GET, POST, PUT, DELETE, OPTIONS"
Access-Control-Allow-Headers = "X-Requested-With, Content-Type, Authorization"

[[headers]]
for = "/assets/*"

[headers.values]
Cache-Control = "public, max-age=31536000, immutable"

[[redirects]]
from = "/api/*"
to = "/.netlify/functions/:splat"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/*"
to = "/index.html"
status = 200.0
force = false

[redirects.query]

[redirects.conditions]

[redirects.headers]

[[redirects]]
from = "/*"
to = "/index.html"
status = 200

[[headers]]
for = "/*"
[headers.values]
Access-Control-Allow-Origin = "*"